{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Exoplanets Discovery","provenance":[{"file_id":"1BWf2HqPxOFUKKYK8Y4ebDA74Wx5O1vaV","timestamp":1650911582191}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Detection of Planets Using Machine Learning"],"metadata":{"id":"sDNjH8r-6tAm"}},{"cell_type":"markdown","source":["# Introduction"],"metadata":{"id":"lLOBH-mz1oRc"}},{"cell_type":"markdown","source":["Exploring space and discovering other world's has been a grand quest for quite some time now. One that was rejuvenated by the Kepler Mission. The objective of the Kepler Mission is to survey the structure and diversity of planetary systems, in hopes of discovering Earth-like planets. In doing so the Kepler telescope collects information on planetary systems such as planet size, radii, mass, size of the star, temperature of the star, all to determine whether it is a habitable planet. This project aims to perform a similar task. However, this team does not have nearly the funds to send a telescope into space like NASA does, so a different and low budget method was applied. This project uses two machine learning algorithm, logistic regression and MLP classifier to confirm whether an object of interest found by the Kepler telescope is indeed a planet. The target variable is the 'soltype' which gives the Kepler disposition, whether or no the object of interest was confirmed to be a planet or just a candidate.\n","\n","\n"],"metadata":{"id":"C5ypvlyR3wcu"}},{"cell_type":"markdown","source":["# Method"],"metadata":{"id":"YfSjkYvT1tu2"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":381},"id":"30caVDc8BgYk","executionInfo":{"status":"error","timestamp":1650917911678,"user_tz":240,"elapsed":7340,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"f806f6a8-c6ea-499b-e844-bab223066d4a"},"outputs":[{"output_type":"error","ename":"MessageError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mMessageError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-5376b87263e4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# Mount Google Drive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mdrive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Get the absolute path of the current folder\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36mmount\u001b[0;34m(mountpoint, force_remount, timeout_ms)\u001b[0m\n\u001b[1;32m    107\u001b[0m       \u001b[0mforce_remount\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mforce_remount\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    108\u001b[0m       \u001b[0mtimeout_ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtimeout_ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 109\u001b[0;31m       ephemeral=True)\n\u001b[0m\u001b[1;32m    110\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    111\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36m_mount\u001b[0;34m(mountpoint, force_remount, timeout_ms, ephemeral)\u001b[0m\n\u001b[1;32m    126\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mephemeral\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m     _message.blocking_request(\n\u001b[0;32m--> 128\u001b[0;31m         'request_auth', request={'authType': 'dfs_ephemeral'}, timeout_sec=None)\n\u001b[0m\u001b[1;32m    129\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    130\u001b[0m   \u001b[0mmountpoint\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_os\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpanduser\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmountpoint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mblocking_request\u001b[0;34m(request_type, request, timeout_sec, parent)\u001b[0m\n\u001b[1;32m    173\u001b[0m   request_id = send_request(\n\u001b[1;32m    174\u001b[0m       request_type, request, parent=parent, expect_reply=True)\n\u001b[0;32m--> 175\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mread_reply_from_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_sec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mread_reply_from_input\u001b[0;34m(message_id, timeout_sec)\u001b[0m\n\u001b[1;32m    104\u001b[0m         reply.get('colab_msg_id') == message_id):\n\u001b[1;32m    105\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0;34m'error'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 106\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mMessageError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreply\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'error'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    107\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'data'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    108\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mMessageError\u001b[0m: Error: credential propagation was unsuccessful"]}],"source":["from google.colab import drive\n","import sys\n","\n","# Mount Google Drive\n","drive.mount('/content/drive')\n","\n","# Get the absolute path of the current folder\n","abspath_curr = '/content/drive/My Drive/Colab Notebooks/'"]},{"cell_type":"code","source":["import warnings\n","\n","# Ignore warnings\n","warnings.filterwarnings('ignore')"],"metadata":{"id":"MGp8DZXXCvis"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%tensorflow_version 2.x \n","import tensorflow as tf\n","from tensorflow import keras\n","\n","# The random seed\n","random_seed = 42\n","\n","# Set random seed in tensorflow\n","tf.random.set_seed(random_seed)\n","\n","# Set random seed in numpy\n","import numpy as np\n","np.random.seed(random_seed)"],"metadata":{"id":"nf1rOmzmCz9o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# The random seed\n","random_seed = 42\n","\n","# Set random seed in tensorflow\n","tf.random.set_seed(random_seed)\n","\n","# Set random seed in numpy\n","import numpy as np\n","np.random.seed(random_seed)"],"metadata":{"id":"3-CToJzzCx9c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","%matplotlib inline \n","\n","# Set matplotlib sizes\n","plt.rc('font', size=20)\n","plt.rc('axes', titlesize=20)\n","plt.rc('axes', labelsize=20)\n","plt.rc('xtick', labelsize=20)\n","plt.rc('ytick', labelsize=20)\n","plt.rc('legend', fontsize=20)\n","plt.rc('figure', titlesize=20)"],"metadata":{"id":"BsTs9x5zDCYT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Data Preprocessing "],"metadata":{"id":"VG7J01e-DG3H"}},{"cell_type":"code","source":["# READING THE DATA\n","from sklearn.model_selection import train_test_split\n","import pandas as pd\n","\n","Planets = pd.read_csv('NASA_Planetary_Systems.csv')\n","\n","df = pd.DataFrame(Planets)\n","df.head(5)"],"metadata":{"id":"crU83DpzDFgT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"9BreEnlIEWHn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Splitting the Data"],"metadata":{"id":"QiidYOI6EkZQ"}},{"cell_type":"code","source":["target = 'soltype'\n","\n","from sklearn.model_selection import train_test_split\n","\n","# Divide the data into training (60%) and test (40%)\n","df_train, df_test = train_test_split(df, \n","                                     train_size=0.6, \n","                                     random_state=random_seed, \n","                                     stratify=df[target])\n","# Divide the test data into validation (50%) and test (50%)\n","df_val, df_test = train_test_split(df_test, \n","                                   train_size=0.5, \n","                                   random_state=random_seed, \n","                                   stratify=df_test[target])\n","\n","# Reset the index\n","df_train, df_val, df_test = df_train.reset_index(drop=True), df_val.reset_index(drop=True), df_test.reset_index(drop=True)\n","\n"],"metadata":{"id":"pJ9Fa9zNEcrD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Print the dimension of df_train\n","pd.DataFrame([[df_train.shape[0], df_train.shape[1]]], columns=['# rows', '# columns'])"],"metadata":{"id":"HOrSFA_oFcBp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Print the dimension of df_val\n","pd.DataFrame([[df_val.shape[0], df_val.shape[1]]], columns=['# rows', '# columns'])"],"metadata":{"id":"kMsRKHfDFe_p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Print the dimension of df_test\n","pd.DataFrame([[df_test.shape[0], df_test.shape[1]]], columns=['# rows', '# columns'])\n"],"metadata":{"id":"T4cW8ktUFh8g"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Print the dimension of df_test\n","pd.DataFrame([[df_test.shape[0], df_test.shape[1]]], columns=['# rows', '# columns'])\n"],"metadata":{"id":"dqjryKI_FlX4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Handling Uncommon Features"],"metadata":{"id":"NRYkI7u6ID_q"}},{"cell_type":"code","source":["def common_var_checker(df_train, df_val, df_test, target):\n","  df_common_var = pd.DataFrame(np.intersect1d(np.intersect1d(df_train.columns, df_val.columns), np.union1d(df_test.columns, [target])),\n","                                 columns=['common var'])\n","  return df_common_var\n","\n","df_common_var = common_var_checker(df_train, df_val, df_test, target)"],"metadata":{"id":"-0cHzRJOIDag"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_common_var"],"metadata":{"id":"-abREQHoIPlV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Get the features in the training data but not in the validation or test data\n","uncommon_feature_train_not_val_test = np.setdiff1d(df_train.columns, df_common_var['common var'])\n","\n","# Print the uncommon features\n","pd.DataFrame(uncommon_feature_train_not_val_test, columns=['uncommon feature'])"],"metadata":{"id":"nfkB4mSGITVJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Get the features in the validation data but not in the training or test data\n","uncommon_feature_val_not_train_test = np.setdiff1d(df_val.columns, df_common_var['common var'])\n","\n","# Print the uncommon features\n","pd.DataFrame(uncommon_feature_val_not_train_test, columns=['uncommon feature'])"],"metadata":{"id":"9Gz5nZEPIWem"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Get the features in the test data but not in the training or validation data\n","uncommon_feature_test_not_train_val = np.setdiff1d(df_test.columns, df_common_var['common var'])\n","\n","# Print the uncommon features\n","pd.DataFrame(uncommon_feature_test_not_train_val, columns=['uncommon feature'])"],"metadata":{"id":"7YHkWFEtIZQv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Handling Identifiers"],"metadata":{"id":"J-6FNnA_Idu_"}},{"cell_type":"code","source":["# Combine df_train, df_val and df_test\n","df = pd.concat([df_train, df_val, df_test], sort=False)"],"metadata":{"id":"vRWa_sqbIfwK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def id_checker(df, dtype='float'):\n","    \n","    # Get the dataframe of identifiers\n","    df_id = df[[var for var in df.columns\n","                # If the data type is not dtype\n","                if (df[var].dtype != dtype\n","                    # If the value is unique for each sample\n","                    and df[var].nunique(dropna=True) == df[var].notnull().sum())]]\n","    \n","    return df_id"],"metadata":{"id":"jr5RSO3DIing"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Call id_checker on df\n","# See the implementation in pmlm_utilities.ipynb\n","df_id = id_checker(df)\n","\n","# Print the first 5 rows of df_id\n","df_id.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_ZUcOiIzIzx6","executionInfo":{"status":"ok","timestamp":1650846818787,"user_tz":240,"elapsed":275,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"46ae844a-3425-42a8-a81e-90237c853dbb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   loc_rowid\n","0      29459\n","1      12179\n","2      25754\n","3       6259\n","4       5168"],"text/html":["\n","  <div id=\"df-c7f113e0-4c1e-4d1c-8c66-c25d80b57d68\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>loc_rowid</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>29459</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12179</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>25754</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6259</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5168</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7f113e0-4c1e-4d1c-8c66-c25d80b57d68')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c7f113e0-4c1e-4d1c-8c66-c25d80b57d68 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c7f113e0-4c1e-4d1c-8c66-c25d80b57d68');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["import numpy as np\n","\n","# Remove identifiers from df_train\n","df_train.drop(columns=np.intersect1d(df_id.columns, df_train.columns), inplace=True)\n","\n","# Remove identifiers from df_val\n","df_val.drop(columns=np.intersect1d(df_id.columns, df_val.columns), inplace=True)\n","\n","# Remove identifiers from df_test\n","df_test.drop(columns=np.intersect1d(df_id.columns, df_test.columns), inplace=True)"],"metadata":{"id":"G8dQjIFUI2nf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Print the first 5 rows of df_train\n","df_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"HQGVp9vFI9vX","executionInfo":{"status":"ok","timestamp":1650846859061,"user_tz":240,"elapsed":293,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"331f76fa-e7f0-42b4-a6e2-7525b38fb1fe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         pl_name     hostname  default_flag  sy_snum  sy_pnum  \\\n","0   Kepler-905 b   Kepler-905             0        1        1   \n","1  Kepler-1568 b  Kepler-1568             0        1        1   \n","2   Kepler-616 b   Kepler-616             0        1        3   \n","3    Kepler-11 c    Kepler-11             0        1        6   \n","4  Kepler-1020 b  Kepler-1020             0        1        1   \n","\n","   pl_controv_flag discoverymethod  disc_year disc_locale disc_facility  ...  \\\n","0                0         Transit       2016       Space        Kepler  ...   \n","1                0         Transit       2016       Space        Kepler  ...   \n","2                0         Transit       2016       Space        Kepler  ...   \n","3                0         Transit       2010       Space        Kepler  ...   \n","4                0         Transit       2016       Space        Kepler  ...   \n","\n","  st_logg st_age          ra        dec      glat      glon  sy_dist  sy_vmag  \\\n","0    4.50    1.6  290.051147  46.713408  14.80518  78.21427  529.268   14.058   \n","1    4.28    NaN  289.182681  47.873330  15.80935  79.07172  916.313   14.138   \n","2    4.47    NaN  294.989137  46.838306  11.81086  79.83355  945.775   15.021   \n","3     NaN    NaN  297.115095  41.909109   8.13328  76.16130  646.346   13.817   \n","4    4.63    0.7  292.672471  46.377278  13.02867  78.68313  415.358   14.211   \n","\n","   sy_kmag  sy_gaiamag  \n","0   12.264     13.9504  \n","1   12.618     13.9451  \n","2   13.448     14.9475  \n","3   12.180     13.7062  \n","4   12.150     13.9833  \n","\n","[5 rows x 40 columns]"],"text/html":["\n","  <div id=\"df-cf9fd5eb-81eb-4167-af7a-2f3078903605\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pl_name</th>\n","      <th>hostname</th>\n","      <th>default_flag</th>\n","      <th>sy_snum</th>\n","      <th>sy_pnum</th>\n","      <th>pl_controv_flag</th>\n","      <th>discoverymethod</th>\n","      <th>disc_year</th>\n","      <th>disc_locale</th>\n","      <th>disc_facility</th>\n","      <th>...</th>\n","      <th>st_logg</th>\n","      <th>st_age</th>\n","      <th>ra</th>\n","      <th>dec</th>\n","      <th>glat</th>\n","      <th>glon</th>\n","      <th>sy_dist</th>\n","      <th>sy_vmag</th>\n","      <th>sy_kmag</th>\n","      <th>sy_gaiamag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Kepler-905 b</td>\n","      <td>Kepler-905</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>...</td>\n","      <td>4.50</td>\n","      <td>1.6</td>\n","      <td>290.051147</td>\n","      <td>46.713408</td>\n","      <td>14.80518</td>\n","      <td>78.21427</td>\n","      <td>529.268</td>\n","      <td>14.058</td>\n","      <td>12.264</td>\n","      <td>13.9504</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Kepler-1568 b</td>\n","      <td>Kepler-1568</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>...</td>\n","      <td>4.28</td>\n","      <td>NaN</td>\n","      <td>289.182681</td>\n","      <td>47.873330</td>\n","      <td>15.80935</td>\n","      <td>79.07172</td>\n","      <td>916.313</td>\n","      <td>14.138</td>\n","      <td>12.618</td>\n","      <td>13.9451</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kepler-616 b</td>\n","      <td>Kepler-616</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>...</td>\n","      <td>4.47</td>\n","      <td>NaN</td>\n","      <td>294.989137</td>\n","      <td>46.838306</td>\n","      <td>11.81086</td>\n","      <td>79.83355</td>\n","      <td>945.775</td>\n","      <td>15.021</td>\n","      <td>13.448</td>\n","      <td>14.9475</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kepler-11 c</td>\n","      <td>Kepler-11</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2010</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>297.115095</td>\n","      <td>41.909109</td>\n","      <td>8.13328</td>\n","      <td>76.16130</td>\n","      <td>646.346</td>\n","      <td>13.817</td>\n","      <td>12.180</td>\n","      <td>13.7062</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Kepler-1020 b</td>\n","      <td>Kepler-1020</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>...</td>\n","      <td>4.63</td>\n","      <td>0.7</td>\n","      <td>292.672471</td>\n","      <td>46.377278</td>\n","      <td>13.02867</td>\n","      <td>78.68313</td>\n","      <td>415.358</td>\n","      <td>14.211</td>\n","      <td>12.150</td>\n","      <td>13.9833</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 40 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf9fd5eb-81eb-4167-af7a-2f3078903605')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cf9fd5eb-81eb-4167-af7a-2f3078903605 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cf9fd5eb-81eb-4167-af7a-2f3078903605');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# Print the first 5 rows of df_val\n","df_val.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":421},"id":"xrJkjzDcKyCf","executionInfo":{"status":"ok","timestamp":1650847331987,"user_tz":240,"elapsed":399,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"1205d56e-5913-48b7-dd8d-23041b713325"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 pl_name             hostname  default_flag  sy_snum  sy_pnum  \\\n","0          Kepler-1678 b          Kepler-1678             0        1        1   \n","1  OGLE-2018-BLG-0532L b  OGLE-2018-BLG-0532L             1        1        1   \n","2            Kepler-20 b            Kepler-20             0        2        6   \n","3           Kepler-714 b           Kepler-714             0        1        1   \n","4          Kepler-1408 b          Kepler-1408             0        1        1   \n","\n","   pl_controv_flag discoverymethod  disc_year disc_locale disc_facility  ...  \\\n","0                0         Transit       2020       Space        Kepler  ...   \n","1                0    Microlensing       2020      Ground          OGLE  ...   \n","2                0         Transit       2011       Space        Kepler  ...   \n","3                0         Transit       2016       Space        Kepler  ...   \n","4                0         Transit       2016       Space        Kepler  ...   \n","\n","  st_logg st_age          ra        dec      glat      glon   sy_dist  \\\n","0    4.61    NaN  292.591630  38.399563   9.51620  71.37765   847.339   \n","1     NaN    NaN  269.983417 -28.997750  -2.72744   1.53870   773.000   \n","2    4.40    8.8  287.697991  42.338578  14.57345  73.37692   282.563   \n","3    4.44    NaN  282.699469  43.272744  18.32302  72.84822  2083.370   \n","4    3.99    NaN  282.699878  45.425788  19.05989  74.98391   535.048   \n","\n","   sy_vmag  sy_kmag  sy_gaiamag  \n","0   15.020   13.371     14.9068  \n","1      NaN      NaN         NaN  \n","2   12.610   10.871     12.4535  \n","3   15.430   13.825     15.2407  \n","4   12.124   10.694     11.9622  \n","\n","[5 rows x 40 columns]"],"text/html":["\n","  <div id=\"df-3b0e7973-c3ef-400b-9593-4fd65ef1deac\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pl_name</th>\n","      <th>hostname</th>\n","      <th>default_flag</th>\n","      <th>sy_snum</th>\n","      <th>sy_pnum</th>\n","      <th>pl_controv_flag</th>\n","      <th>discoverymethod</th>\n","      <th>disc_year</th>\n","      <th>disc_locale</th>\n","      <th>disc_facility</th>\n","      <th>...</th>\n","      <th>st_logg</th>\n","      <th>st_age</th>\n","      <th>ra</th>\n","      <th>dec</th>\n","      <th>glat</th>\n","      <th>glon</th>\n","      <th>sy_dist</th>\n","      <th>sy_vmag</th>\n","      <th>sy_kmag</th>\n","      <th>sy_gaiamag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Kepler-1678 b</td>\n","      <td>Kepler-1678</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2020</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>...</td>\n","      <td>4.61</td>\n","      <td>NaN</td>\n","      <td>292.591630</td>\n","      <td>38.399563</td>\n","      <td>9.51620</td>\n","      <td>71.37765</td>\n","      <td>847.339</td>\n","      <td>15.020</td>\n","      <td>13.371</td>\n","      <td>14.9068</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>OGLE-2018-BLG-0532L b</td>\n","      <td>OGLE-2018-BLG-0532L</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Microlensing</td>\n","      <td>2020</td>\n","      <td>Ground</td>\n","      <td>OGLE</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>269.983417</td>\n","      <td>-28.997750</td>\n","      <td>-2.72744</td>\n","      <td>1.53870</td>\n","      <td>773.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kepler-20 b</td>\n","      <td>Kepler-20</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2011</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>...</td>\n","      <td>4.40</td>\n","      <td>8.8</td>\n","      <td>287.697991</td>\n","      <td>42.338578</td>\n","      <td>14.57345</td>\n","      <td>73.37692</td>\n","      <td>282.563</td>\n","      <td>12.610</td>\n","      <td>10.871</td>\n","      <td>12.4535</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kepler-714 b</td>\n","      <td>Kepler-714</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>...</td>\n","      <td>4.44</td>\n","      <td>NaN</td>\n","      <td>282.699469</td>\n","      <td>43.272744</td>\n","      <td>18.32302</td>\n","      <td>72.84822</td>\n","      <td>2083.370</td>\n","      <td>15.430</td>\n","      <td>13.825</td>\n","      <td>15.2407</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Kepler-1408 b</td>\n","      <td>Kepler-1408</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>...</td>\n","      <td>3.99</td>\n","      <td>NaN</td>\n","      <td>282.699878</td>\n","      <td>45.425788</td>\n","      <td>19.05989</td>\n","      <td>74.98391</td>\n","      <td>535.048</td>\n","      <td>12.124</td>\n","      <td>10.694</td>\n","      <td>11.9622</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 40 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b0e7973-c3ef-400b-9593-4fd65ef1deac')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3b0e7973-c3ef-400b-9593-4fd65ef1deac button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3b0e7973-c3ef-400b-9593-4fd65ef1deac');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# Print the first 5 rows of df_test\n","df_test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":369},"id":"TS-VCrdeK1pN","executionInfo":{"status":"ok","timestamp":1650847349864,"user_tz":240,"elapsed":267,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"4589a547-5067-473a-a562-b92701ea7666"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         pl_name     hostname  default_flag  sy_snum  sy_pnum  \\\n","0   Kepler-583 b   Kepler-583             0        1        1   \n","1     HAT-P-39 b     HAT-P-39             1        2        1   \n","2   OGLE-TR-10 b   OGLE-TR-10             0        1        1   \n","3  Kepler-1665 b  Kepler-1665             0        1        1   \n","4       K2-174 b       K2-174             0        1        1   \n","\n","   pl_controv_flag discoverymethod  disc_year disc_locale disc_facility  ...  \\\n","0                0         Transit       2016       Space        Kepler  ...   \n","1                0         Transit       2012      Ground        HATNet  ...   \n","2                0         Transit       2004      Ground          OGLE  ...   \n","3                0         Transit       2020       Space        Kepler  ...   \n","4                0         Transit       2018       Space            K2  ...   \n","\n","  st_logg st_age          ra        dec      glat       glon    sy_dist  \\\n","0    4.36    NaN  282.111321  42.354551  18.40861   71.78308   867.2710   \n","1     NaN    NaN  113.758253  17.830028  17.44627  201.41730   697.0040   \n","2    4.40    NaN  267.867748 -29.876476  -1.57666  359.85149  1344.9700   \n","3    3.98    NaN  290.396240  41.039923  12.20124   73.02343   335.5150   \n","4    4.50    NaN   60.792973  16.347166 -26.34917  175.58217    99.9293   \n","\n","   sy_vmag  sy_kmag  sy_gaiamag  \n","0   14.883   13.090     14.7985  \n","1   12.282   11.157     12.2269  \n","2   16.006   12.856     15.6845  \n","3   13.737   11.571     13.5913  \n","4   12.456    9.496     12.0082  \n","\n","[5 rows x 40 columns]"],"text/html":["\n","  <div id=\"df-abf82cc6-d9b8-41fc-b86c-8c3281ec0b76\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pl_name</th>\n","      <th>hostname</th>\n","      <th>default_flag</th>\n","      <th>sy_snum</th>\n","      <th>sy_pnum</th>\n","      <th>pl_controv_flag</th>\n","      <th>discoverymethod</th>\n","      <th>disc_year</th>\n","      <th>disc_locale</th>\n","      <th>disc_facility</th>\n","      <th>...</th>\n","      <th>st_logg</th>\n","      <th>st_age</th>\n","      <th>ra</th>\n","      <th>dec</th>\n","      <th>glat</th>\n","      <th>glon</th>\n","      <th>sy_dist</th>\n","      <th>sy_vmag</th>\n","      <th>sy_kmag</th>\n","      <th>sy_gaiamag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Kepler-583 b</td>\n","      <td>Kepler-583</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>...</td>\n","      <td>4.36</td>\n","      <td>NaN</td>\n","      <td>282.111321</td>\n","      <td>42.354551</td>\n","      <td>18.40861</td>\n","      <td>71.78308</td>\n","      <td>867.2710</td>\n","      <td>14.883</td>\n","      <td>13.090</td>\n","      <td>14.7985</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HAT-P-39 b</td>\n","      <td>HAT-P-39</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2012</td>\n","      <td>Ground</td>\n","      <td>HATNet</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>113.758253</td>\n","      <td>17.830028</td>\n","      <td>17.44627</td>\n","      <td>201.41730</td>\n","      <td>697.0040</td>\n","      <td>12.282</td>\n","      <td>11.157</td>\n","      <td>12.2269</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>OGLE-TR-10 b</td>\n","      <td>OGLE-TR-10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2004</td>\n","      <td>Ground</td>\n","      <td>OGLE</td>\n","      <td>...</td>\n","      <td>4.40</td>\n","      <td>NaN</td>\n","      <td>267.867748</td>\n","      <td>-29.876476</td>\n","      <td>-1.57666</td>\n","      <td>359.85149</td>\n","      <td>1344.9700</td>\n","      <td>16.006</td>\n","      <td>12.856</td>\n","      <td>15.6845</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kepler-1665 b</td>\n","      <td>Kepler-1665</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2020</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>...</td>\n","      <td>3.98</td>\n","      <td>NaN</td>\n","      <td>290.396240</td>\n","      <td>41.039923</td>\n","      <td>12.20124</td>\n","      <td>73.02343</td>\n","      <td>335.5150</td>\n","      <td>13.737</td>\n","      <td>11.571</td>\n","      <td>13.5913</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>K2-174 b</td>\n","      <td>K2-174</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2018</td>\n","      <td>Space</td>\n","      <td>K2</td>\n","      <td>...</td>\n","      <td>4.50</td>\n","      <td>NaN</td>\n","      <td>60.792973</td>\n","      <td>16.347166</td>\n","      <td>-26.34917</td>\n","      <td>175.58217</td>\n","      <td>99.9293</td>\n","      <td>12.456</td>\n","      <td>9.496</td>\n","      <td>12.0082</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 40 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-abf82cc6-d9b8-41fc-b86c-8c3281ec0b76')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-abf82cc6-d9b8-41fc-b86c-8c3281ec0b76 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-abf82cc6-d9b8-41fc-b86c-8c3281ec0b76');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# also deleting names "],"metadata":{"id":"MVEj0EV_LrAc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_test.drop(columns=['pl_name','hostname'], inplace=True)\n","df_train.drop(columns=['pl_name','hostname'], inplace=True)\n","df_val.drop(columns=['pl_name','hostname'], inplace=True)"],"metadata":{"id":"DIcNHFQOLtjN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Print the first 5 rows of df_train\n","df_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"U6jCeiNbL-4G","executionInfo":{"status":"ok","timestamp":1650847649236,"user_tz":240,"elapsed":279,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"3151c181-f2b7-4548-e014-f147cdda1adc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   default_flag  sy_snum  sy_pnum  pl_controv_flag discoverymethod  disc_year  \\\n","0             0        1        1                0         Transit       2016   \n","1             0        1        1                0         Transit       2016   \n","2             0        1        3                0         Transit       2016   \n","3             0        1        6                0         Transit       2010   \n","4             0        1        1                0         Transit       2016   \n","\n","  disc_locale disc_facility           disc_telescope   disc_instrument  ...  \\\n","0       Space        Kepler  0.95 m Kepler Telescope  Kepler CCD Array  ...   \n","1       Space        Kepler  0.95 m Kepler Telescope  Kepler CCD Array  ...   \n","2       Space        Kepler  0.95 m Kepler Telescope  Kepler CCD Array  ...   \n","3       Space        Kepler  0.95 m Kepler Telescope  Kepler CCD Array  ...   \n","4       Space        Kepler  0.95 m Kepler Telescope  Kepler CCD Array  ...   \n","\n","  st_logg  st_age          ra        dec      glat      glon  sy_dist  \\\n","0    4.50     1.6  290.051147  46.713408  14.80518  78.21427  529.268   \n","1    4.28     NaN  289.182681  47.873330  15.80935  79.07172  916.313   \n","2    4.47     NaN  294.989137  46.838306  11.81086  79.83355  945.775   \n","3     NaN     NaN  297.115095  41.909109   8.13328  76.16130  646.346   \n","4    4.63     0.7  292.672471  46.377278  13.02867  78.68313  415.358   \n","\n","   sy_vmag  sy_kmag  sy_gaiamag  \n","0   14.058   12.264     13.9504  \n","1   14.138   12.618     13.9451  \n","2   15.021   13.448     14.9475  \n","3   13.817   12.180     13.7062  \n","4   14.211   12.150     13.9833  \n","\n","[5 rows x 38 columns]"],"text/html":["\n","  <div id=\"df-0b55173a-0816-4175-b522-87ca6b0f4f9d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>default_flag</th>\n","      <th>sy_snum</th>\n","      <th>sy_pnum</th>\n","      <th>pl_controv_flag</th>\n","      <th>discoverymethod</th>\n","      <th>disc_year</th>\n","      <th>disc_locale</th>\n","      <th>disc_facility</th>\n","      <th>disc_telescope</th>\n","      <th>disc_instrument</th>\n","      <th>...</th>\n","      <th>st_logg</th>\n","      <th>st_age</th>\n","      <th>ra</th>\n","      <th>dec</th>\n","      <th>glat</th>\n","      <th>glon</th>\n","      <th>sy_dist</th>\n","      <th>sy_vmag</th>\n","      <th>sy_kmag</th>\n","      <th>sy_gaiamag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>4.50</td>\n","      <td>1.6</td>\n","      <td>290.051147</td>\n","      <td>46.713408</td>\n","      <td>14.80518</td>\n","      <td>78.21427</td>\n","      <td>529.268</td>\n","      <td>14.058</td>\n","      <td>12.264</td>\n","      <td>13.9504</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>4.28</td>\n","      <td>NaN</td>\n","      <td>289.182681</td>\n","      <td>47.873330</td>\n","      <td>15.80935</td>\n","      <td>79.07172</td>\n","      <td>916.313</td>\n","      <td>14.138</td>\n","      <td>12.618</td>\n","      <td>13.9451</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>4.47</td>\n","      <td>NaN</td>\n","      <td>294.989137</td>\n","      <td>46.838306</td>\n","      <td>11.81086</td>\n","      <td>79.83355</td>\n","      <td>945.775</td>\n","      <td>15.021</td>\n","      <td>13.448</td>\n","      <td>14.9475</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2010</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>297.115095</td>\n","      <td>41.909109</td>\n","      <td>8.13328</td>\n","      <td>76.16130</td>\n","      <td>646.346</td>\n","      <td>13.817</td>\n","      <td>12.180</td>\n","      <td>13.7062</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>4.63</td>\n","      <td>0.7</td>\n","      <td>292.672471</td>\n","      <td>46.377278</td>\n","      <td>13.02867</td>\n","      <td>78.68313</td>\n","      <td>415.358</td>\n","      <td>14.211</td>\n","      <td>12.150</td>\n","      <td>13.9833</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 38 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b55173a-0816-4175-b522-87ca6b0f4f9d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0b55173a-0816-4175-b522-87ca6b0f4f9d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0b55173a-0816-4175-b522-87ca6b0f4f9d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["# Print the first 5 rows of df_test\n","df_test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":403},"id":"cWm5-_oOMDOt","executionInfo":{"status":"ok","timestamp":1650847666696,"user_tz":240,"elapsed":263,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"dd58dbde-35d5-477b-dfed-eafe342e62c6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   default_flag  sy_snum  sy_pnum  pl_controv_flag discoverymethod  disc_year  \\\n","0             0        1        1                0         Transit       2016   \n","1             1        2        1                0         Transit       2012   \n","2             0        1        1                0         Transit       2004   \n","3             0        1        1                0         Transit       2020   \n","4             0        1        1                0         Transit       2018   \n","\n","  disc_locale disc_facility                     disc_telescope  \\\n","0       Space        Kepler            0.95 m Kepler Telescope   \n","1      Ground        HATNet                 Canon 200mm f/1.8L   \n","2      Ground          OGLE  1.3 m Warsaw University Telescope   \n","3       Space        Kepler            0.95 m Kepler Telescope   \n","4       Space            K2            0.95 m Kepler Telescope   \n","\n","    disc_instrument  ... st_logg  st_age          ra        dec      glat  \\\n","0  Kepler CCD Array  ...    4.36     NaN  282.111321  42.354551  18.40861   \n","1     2K CCD Sensor  ...     NaN     NaN  113.758253  17.830028  17.44627   \n","2    OGLE CCD Array  ...    4.40     NaN  267.867748 -29.876476  -1.57666   \n","3  Kepler CCD Array  ...    3.98     NaN  290.396240  41.039923  12.20124   \n","4  Kepler CCD Array  ...    4.50     NaN   60.792973  16.347166 -26.34917   \n","\n","        glon    sy_dist  sy_vmag  sy_kmag  sy_gaiamag  \n","0   71.78308   867.2710   14.883   13.090     14.7985  \n","1  201.41730   697.0040   12.282   11.157     12.2269  \n","2  359.85149  1344.9700   16.006   12.856     15.6845  \n","3   73.02343   335.5150   13.737   11.571     13.5913  \n","4  175.58217    99.9293   12.456    9.496     12.0082  \n","\n","[5 rows x 38 columns]"],"text/html":["\n","  <div id=\"df-8ee6fc94-b67f-43fe-98a2-9ea8ec31b685\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>default_flag</th>\n","      <th>sy_snum</th>\n","      <th>sy_pnum</th>\n","      <th>pl_controv_flag</th>\n","      <th>discoverymethod</th>\n","      <th>disc_year</th>\n","      <th>disc_locale</th>\n","      <th>disc_facility</th>\n","      <th>disc_telescope</th>\n","      <th>disc_instrument</th>\n","      <th>...</th>\n","      <th>st_logg</th>\n","      <th>st_age</th>\n","      <th>ra</th>\n","      <th>dec</th>\n","      <th>glat</th>\n","      <th>glon</th>\n","      <th>sy_dist</th>\n","      <th>sy_vmag</th>\n","      <th>sy_kmag</th>\n","      <th>sy_gaiamag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>4.36</td>\n","      <td>NaN</td>\n","      <td>282.111321</td>\n","      <td>42.354551</td>\n","      <td>18.40861</td>\n","      <td>71.78308</td>\n","      <td>867.2710</td>\n","      <td>14.883</td>\n","      <td>13.090</td>\n","      <td>14.7985</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2012</td>\n","      <td>Ground</td>\n","      <td>HATNet</td>\n","      <td>Canon 200mm f/1.8L</td>\n","      <td>2K CCD Sensor</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>113.758253</td>\n","      <td>17.830028</td>\n","      <td>17.44627</td>\n","      <td>201.41730</td>\n","      <td>697.0040</td>\n","      <td>12.282</td>\n","      <td>11.157</td>\n","      <td>12.2269</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2004</td>\n","      <td>Ground</td>\n","      <td>OGLE</td>\n","      <td>1.3 m Warsaw University Telescope</td>\n","      <td>OGLE CCD Array</td>\n","      <td>...</td>\n","      <td>4.40</td>\n","      <td>NaN</td>\n","      <td>267.867748</td>\n","      <td>-29.876476</td>\n","      <td>-1.57666</td>\n","      <td>359.85149</td>\n","      <td>1344.9700</td>\n","      <td>16.006</td>\n","      <td>12.856</td>\n","      <td>15.6845</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2020</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>3.98</td>\n","      <td>NaN</td>\n","      <td>290.396240</td>\n","      <td>41.039923</td>\n","      <td>12.20124</td>\n","      <td>73.02343</td>\n","      <td>335.5150</td>\n","      <td>13.737</td>\n","      <td>11.571</td>\n","      <td>13.5913</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2018</td>\n","      <td>Space</td>\n","      <td>K2</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>4.50</td>\n","      <td>NaN</td>\n","      <td>60.792973</td>\n","      <td>16.347166</td>\n","      <td>-26.34917</td>\n","      <td>175.58217</td>\n","      <td>99.9293</td>\n","      <td>12.456</td>\n","      <td>9.496</td>\n","      <td>12.0082</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 38 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ee6fc94-b67f-43fe-98a2-9ea8ec31b685')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8ee6fc94-b67f-43fe-98a2-9ea8ec31b685 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8ee6fc94-b67f-43fe-98a2-9ea8ec31b685');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["# Print the first 5 rows of df_val\n","df_val.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":403},"id":"Bieq87YZMHGc","executionInfo":{"status":"ok","timestamp":1650847682800,"user_tz":240,"elapsed":259,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"4f27ed5c-5d49-4860-8d56-8e8747bbbe91"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   default_flag  sy_snum  sy_pnum  pl_controv_flag discoverymethod  disc_year  \\\n","0             0        1        1                0         Transit       2020   \n","1             1        1        1                0    Microlensing       2020   \n","2             0        2        6                0         Transit       2011   \n","3             0        1        1                0         Transit       2016   \n","4             0        1        1                0         Transit       2016   \n","\n","  disc_locale disc_facility                     disc_telescope  \\\n","0       Space        Kepler            0.95 m Kepler Telescope   \n","1      Ground          OGLE  1.3 m Warsaw University Telescope   \n","2       Space        Kepler            0.95 m Kepler Telescope   \n","3       Space        Kepler            0.95 m Kepler Telescope   \n","4       Space        Kepler            0.95 m Kepler Telescope   \n","\n","    disc_instrument  ... st_logg  st_age          ra        dec      glat  \\\n","0  Kepler CCD Array  ...    4.61     NaN  292.591630  38.399563   9.51620   \n","1    OGLE CCD Array  ...     NaN     NaN  269.983417 -28.997750  -2.72744   \n","2  Kepler CCD Array  ...    4.40     8.8  287.697991  42.338578  14.57345   \n","3  Kepler CCD Array  ...    4.44     NaN  282.699469  43.272744  18.32302   \n","4  Kepler CCD Array  ...    3.99     NaN  282.699878  45.425788  19.05989   \n","\n","       glon   sy_dist  sy_vmag  sy_kmag  sy_gaiamag  \n","0  71.37765   847.339   15.020   13.371     14.9068  \n","1   1.53870   773.000      NaN      NaN         NaN  \n","2  73.37692   282.563   12.610   10.871     12.4535  \n","3  72.84822  2083.370   15.430   13.825     15.2407  \n","4  74.98391   535.048   12.124   10.694     11.9622  \n","\n","[5 rows x 38 columns]"],"text/html":["\n","  <div id=\"df-4ad0d29d-d804-43a4-ab60-441499b610a0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>default_flag</th>\n","      <th>sy_snum</th>\n","      <th>sy_pnum</th>\n","      <th>pl_controv_flag</th>\n","      <th>discoverymethod</th>\n","      <th>disc_year</th>\n","      <th>disc_locale</th>\n","      <th>disc_facility</th>\n","      <th>disc_telescope</th>\n","      <th>disc_instrument</th>\n","      <th>...</th>\n","      <th>st_logg</th>\n","      <th>st_age</th>\n","      <th>ra</th>\n","      <th>dec</th>\n","      <th>glat</th>\n","      <th>glon</th>\n","      <th>sy_dist</th>\n","      <th>sy_vmag</th>\n","      <th>sy_kmag</th>\n","      <th>sy_gaiamag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2020</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>4.61</td>\n","      <td>NaN</td>\n","      <td>292.591630</td>\n","      <td>38.399563</td>\n","      <td>9.51620</td>\n","      <td>71.37765</td>\n","      <td>847.339</td>\n","      <td>15.020</td>\n","      <td>13.371</td>\n","      <td>14.9068</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Microlensing</td>\n","      <td>2020</td>\n","      <td>Ground</td>\n","      <td>OGLE</td>\n","      <td>1.3 m Warsaw University Telescope</td>\n","      <td>OGLE CCD Array</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>269.983417</td>\n","      <td>-28.997750</td>\n","      <td>-2.72744</td>\n","      <td>1.53870</td>\n","      <td>773.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2011</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>4.40</td>\n","      <td>8.8</td>\n","      <td>287.697991</td>\n","      <td>42.338578</td>\n","      <td>14.57345</td>\n","      <td>73.37692</td>\n","      <td>282.563</td>\n","      <td>12.610</td>\n","      <td>10.871</td>\n","      <td>12.4535</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>4.44</td>\n","      <td>NaN</td>\n","      <td>282.699469</td>\n","      <td>43.272744</td>\n","      <td>18.32302</td>\n","      <td>72.84822</td>\n","      <td>2083.370</td>\n","      <td>15.430</td>\n","      <td>13.825</td>\n","      <td>15.2407</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Transit</td>\n","      <td>2016</td>\n","      <td>Space</td>\n","      <td>Kepler</td>\n","      <td>0.95 m Kepler Telescope</td>\n","      <td>Kepler CCD Array</td>\n","      <td>...</td>\n","      <td>3.99</td>\n","      <td>NaN</td>\n","      <td>282.699878</td>\n","      <td>45.425788</td>\n","      <td>19.05989</td>\n","      <td>74.98391</td>\n","      <td>535.048</td>\n","      <td>12.124</td>\n","      <td>10.694</td>\n","      <td>11.9622</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 38 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ad0d29d-d804-43a4-ab60-441499b610a0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4ad0d29d-d804-43a4-ab60-441499b610a0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4ad0d29d-d804-43a4-ab60-441499b610a0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["## Handling Datetime Variables"],"metadata":{"id":"lUkSMe30MMnQ"}},{"cell_type":"code","source":["# No Need"],"metadata":{"id":"ozNTu7kxMJgB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Handling Missing Data"],"metadata":{"id":"R0X7C4QhNBBK"}},{"cell_type":"code","source":["# Combine df_train, df_val and df_test\n","df = pd.concat([df_train, df_val, df_test], sort=False)"],"metadata":{"id":"wtFWgJRuNADj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def nan_checker(df):\n","    \"\"\"\n","    The NaN checker\n","\n","    Parameters\n","    ----------\n","    df : the dataframe\n","    \n","    Returns\n","    ----------\n","    The dataframe of variables with NaN, their proportion of NaN and data type\n","    \"\"\"\n","    \n","    # Get the dataframe of variables with NaN, their proportion of NaN and data type\n","    df_nan = pd.DataFrame([[var, df[var].isna().sum() / df.shape[0], df[var].dtype]\n","                           for var in df.columns if df[var].isna().sum() > 0],\n","                          columns=['var', 'proportion', 'dtype'])\n","    \n","    # Sort df_nan in accending order of the proportion of NaN\n","    df_nan = df_nan.sort_values(by='proportion', ascending=False).reset_index(drop=True)\n","    \n","    return df_nan"],"metadata":{"id":"YacwnpCDNKFc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Call nan_checker on df\n","# See the implementation in pmlm_utilities.ipynb\n","df_nan = nan_checker(df)\n","\n","# Print df_nan\n","df_nan"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":739},"id":"pgL62vJnNXHY","executionInfo":{"status":"ok","timestamp":1650848016109,"user_tz":240,"elapsed":324,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"d5bf2c26-b364-4fe3-b3ed-8d5b143dbb2c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            var  proportion    dtype\n","0   st_spectype    0.945065   object\n","1     pl_bmassj    0.856043  float64\n","2     pl_bmasse    0.856012  float64\n","3        st_age    0.798138  float64\n","4        st_lum    0.742429  float64\n","5       pl_radj    0.701104  float64\n","6      pl_insol    0.576170  float64\n","7        pl_eqt    0.544774  float64\n","8    pl_orbincl    0.525596  float64\n","9   pl_orbeccen    0.486127  float64\n","10   pl_orbsmax    0.438863  float64\n","11       st_met    0.350892  float64\n","12      pl_rade    0.298215  float64\n","13      st_logg    0.166167  float64\n","14      st_mass    0.135389  float64\n","15    pl_orbper    0.086857  float64\n","16      st_teff    0.057472  float64\n","17       st_rad    0.052956  float64\n","18      sy_dist    0.024343  float64\n","19   sy_gaiamag    0.020601  float64\n","20      sy_kmag    0.012218  float64\n","21      sy_vmag    0.011692  float64"],"text/html":["\n","  <div id=\"df-26f4e144-2b7e-466c-afa0-e30f6e797c56\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>var</th>\n","      <th>proportion</th>\n","      <th>dtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>st_spectype</td>\n","      <td>0.945065</td>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>pl_bmassj</td>\n","      <td>0.856043</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>pl_bmasse</td>\n","      <td>0.856012</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>st_age</td>\n","      <td>0.798138</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>st_lum</td>\n","      <td>0.742429</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>pl_radj</td>\n","      <td>0.701104</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>pl_insol</td>\n","      <td>0.576170</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>pl_eqt</td>\n","      <td>0.544774</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>pl_orbincl</td>\n","      <td>0.525596</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>pl_orbeccen</td>\n","      <td>0.486127</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>pl_orbsmax</td>\n","      <td>0.438863</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>st_met</td>\n","      <td>0.350892</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>pl_rade</td>\n","      <td>0.298215</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>st_logg</td>\n","      <td>0.166167</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>st_mass</td>\n","      <td>0.135389</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>pl_orbper</td>\n","      <td>0.086857</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>st_teff</td>\n","      <td>0.057472</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>st_rad</td>\n","      <td>0.052956</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>sy_dist</td>\n","      <td>0.024343</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>sy_gaiamag</td>\n","      <td>0.020601</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>sy_kmag</td>\n","      <td>0.012218</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>sy_vmag</td>\n","      <td>0.011692</td>\n","      <td>float64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-26f4e144-2b7e-466c-afa0-e30f6e797c56')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-26f4e144-2b7e-466c-afa0-e30f6e797c56 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-26f4e144-2b7e-466c-afa0-e30f6e797c56');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["# Print the unique data type of variables with NaN\n","pd.DataFrame(df_nan['dtype'].unique(), columns=['dtype'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"_R8VILAxNdQY","executionInfo":{"status":"ok","timestamp":1650848047512,"user_tz":240,"elapsed":287,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"c9c16674-0148-458a-a150-039ef6a47db0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     dtype\n","0   object\n","1  float64"],"text/html":["\n","  <div id=\"df-30248efc-e65b-4870-9b35-712dfadd8e61\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>float64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30248efc-e65b-4870-9b35-712dfadd8e61')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-30248efc-e65b-4870-9b35-712dfadd8e61 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-30248efc-e65b-4870-9b35-712dfadd8e61');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["# Get the variables with missing values, their proportion of missing values and data type\n","df_miss = df_nan[df_nan['dtype'] == 'float64'].reset_index(drop=True)\n","\n","# Print df_miss\n","df_miss"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":708},"id":"EKSNDW1CNinI","executionInfo":{"status":"ok","timestamp":1650848063057,"user_tz":240,"elapsed":263,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"79632ccc-85aa-4c8d-c9fc-52859b4ace6a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            var  proportion    dtype\n","0     pl_bmassj    0.856043  float64\n","1     pl_bmasse    0.856012  float64\n","2        st_age    0.798138  float64\n","3        st_lum    0.742429  float64\n","4       pl_radj    0.701104  float64\n","5      pl_insol    0.576170  float64\n","6        pl_eqt    0.544774  float64\n","7    pl_orbincl    0.525596  float64\n","8   pl_orbeccen    0.486127  float64\n","9    pl_orbsmax    0.438863  float64\n","10       st_met    0.350892  float64\n","11      pl_rade    0.298215  float64\n","12      st_logg    0.166167  float64\n","13      st_mass    0.135389  float64\n","14    pl_orbper    0.086857  float64\n","15      st_teff    0.057472  float64\n","16       st_rad    0.052956  float64\n","17      sy_dist    0.024343  float64\n","18   sy_gaiamag    0.020601  float64\n","19      sy_kmag    0.012218  float64\n","20      sy_vmag    0.011692  float64"],"text/html":["\n","  <div id=\"df-d0e22350-5269-4aae-89b6-5b1fe71efa3c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>var</th>\n","      <th>proportion</th>\n","      <th>dtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>pl_bmassj</td>\n","      <td>0.856043</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>pl_bmasse</td>\n","      <td>0.856012</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>st_age</td>\n","      <td>0.798138</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>st_lum</td>\n","      <td>0.742429</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>pl_radj</td>\n","      <td>0.701104</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>pl_insol</td>\n","      <td>0.576170</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>pl_eqt</td>\n","      <td>0.544774</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>pl_orbincl</td>\n","      <td>0.525596</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>pl_orbeccen</td>\n","      <td>0.486127</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>pl_orbsmax</td>\n","      <td>0.438863</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>st_met</td>\n","      <td>0.350892</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>pl_rade</td>\n","      <td>0.298215</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>st_logg</td>\n","      <td>0.166167</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>st_mass</td>\n","      <td>0.135389</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>pl_orbper</td>\n","      <td>0.086857</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>st_teff</td>\n","      <td>0.057472</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>st_rad</td>\n","      <td>0.052956</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>sy_dist</td>\n","      <td>0.024343</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>sy_gaiamag</td>\n","      <td>0.020601</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>sy_kmag</td>\n","      <td>0.012218</td>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>sy_vmag</td>\n","      <td>0.011692</td>\n","      <td>float64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0e22350-5269-4aae-89b6-5b1fe71efa3c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d0e22350-5269-4aae-89b6-5b1fe71efa3c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d0e22350-5269-4aae-89b6-5b1fe71efa3c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["# Separating the training data\n","df_train = df.iloc[:df_train.shape[0], :]\n","\n","# Separating the validation data\n","df_val = df.iloc[df_train.shape[0]:df_train.shape[0] + df_val.shape[0], :]\n","\n","# Separating the test data\n","df_test = df.iloc[df_train.shape[0] + df_val.shape[0]:, :]"],"metadata":{"id":"OmdNI_iCNpmY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Print the dimension of df_train\n","pd.DataFrame([[df_train.shape[0], df_train.shape[1]]], columns=['# rows', '# columns'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"7t7IkXNONwzE","executionInfo":{"status":"ok","timestamp":1650848123337,"user_tz":240,"elapsed":325,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"859fa970-14da-4e81-c7f4-54597f7c5e03"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   # rows  # columns\n","0   19397         38"],"text/html":["\n","  <div id=\"df-0dec2401-4d8a-4db3-a247-706973192b2c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th># rows</th>\n","      <th># columns</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19397</td>\n","      <td>38</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0dec2401-4d8a-4db3-a247-706973192b2c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0dec2401-4d8a-4db3-a247-706973192b2c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0dec2401-4d8a-4db3-a247-706973192b2c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["# Print the dimension of df_val\n","pd.DataFrame([[df_val.shape[0], df_val.shape[1]]], columns=['# rows', '# columns'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"D6SwyyBkN0t3","executionInfo":{"status":"ok","timestamp":1650848132972,"user_tz":240,"elapsed":430,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"0dfe75ef-c65b-444c-fe1a-aefd069b1bf6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   # rows  # columns\n","0    6466         38"],"text/html":["\n","  <div id=\"df-adfee7ca-ef89-4536-ac43-7a43e5daa4fe\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th># rows</th>\n","      <th># columns</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6466</td>\n","      <td>38</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-adfee7ca-ef89-4536-ac43-7a43e5daa4fe')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-adfee7ca-ef89-4536-ac43-7a43e5daa4fe button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-adfee7ca-ef89-4536-ac43-7a43e5daa4fe');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# Print the dimension of df_test\n","pd.DataFrame([[df_test.shape[0], df_test.shape[1]]], columns=['# rows', '# columns'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"riovcU3JN3Vz","executionInfo":{"status":"ok","timestamp":1650848146876,"user_tz":240,"elapsed":312,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"42bf8061-55ca-4a25-ed63-28e29a146b3d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   # rows  # columns\n","0    6466         38"],"text/html":["\n","  <div id=\"df-66bd61a8-a52b-43e0-bd4e-603006a2d67b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th># rows</th>\n","      <th># columns</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6466</td>\n","      <td>38</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-66bd61a8-a52b-43e0-bd4e-603006a2d67b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-66bd61a8-a52b-43e0-bd4e-603006a2d67b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-66bd61a8-a52b-43e0-bd4e-603006a2d67b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["from sklearn.impute import SimpleImputer\n","\n","# If there are missing values\n","if len(df_miss['var']) > 0:\n","    # The SimpleImputer\n","    si = SimpleImputer(missing_values=np.nan, strategy='most_frequent')\n","\n","    # Impute the variables with missing values in df_train, df_val and df_test \n","    df_train[df_miss['var']] = si.fit_transform(df_train[df_miss['var']])\n","    df_val[df_miss['var']] = si.transform(df_val[df_miss['var']])\n","    df_test[df_miss['var']] = si.transform(df_test[df_miss['var']])"],"metadata":{"id":"9uBPwundN65q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['st_spectype'].value_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PWLoWkxAONC-","executionInfo":{"status":"ok","timestamp":1650848273110,"user_tz":240,"elapsed":824,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"485f36c7-3104-43a8-a43d-746cf30cabeb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method IndexOpsMixin.value_counts of 0       NaN\n","1       NaN\n","2       NaN\n","3       NaN\n","4       NaN\n","       ... \n","6461    NaN\n","6462    NaN\n","6463    NaN\n","6464    NaN\n","6465    NaN\n","Name: st_spectype, Length: 32329, dtype: object>"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["df_train.isnull().sum()"],"metadata":{"id":"wObCRh3zOdeF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# DROP st_spectype, too many Nan"],"metadata":{"id":"iOUUYwiOPayr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_test.drop(columns='st_spectype', axis=1, inplace=True)"],"metadata":{"id":"HjnFZ_acPAbv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train.drop(columns='st_spectype', axis=1, inplace=True)"],"metadata":{"id":"Qx2PMMeePerq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_val.drop(columns='st_spectype', axis=1, inplace=True)"],"metadata":{"id":"amHpsxrRPiT8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Encoding the Data"],"metadata":{"id":"uVJ02oP3QKfT"}},{"cell_type":"code","source":["# Combine df_train, df_val and df_test\n","df = pd.concat([df_train, df_val, df_test], sort=False)\n","\n","# Print the unique data type of variables in df\n","pd.DataFrame(df.dtypes.unique(), columns=['dtype'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"iZcIntGVQEqx","executionInfo":{"status":"ok","timestamp":1650848756879,"user_tz":240,"elapsed":392,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"ef191352-5fe9-47d3-89fe-3bf70220e6aa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     dtype\n","0    int64\n","1   object\n","2  float64"],"text/html":["\n","  <div id=\"df-2ae0e811-7fd2-4e4a-bf76-00a5d57edace\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>float64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ae0e811-7fd2-4e4a-bf76-00a5d57edace')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2ae0e811-7fd2-4e4a-bf76-00a5d57edace button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2ae0e811-7fd2-4e4a-bf76-00a5d57edace');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["def cat_var_checker(df, dtype='object'):\n","    \"\"\"\n","    The categorical variable checker\n","\n","    Parameters\n","    ----------\n","    df : the dataframe\n","    dtype : the data type categorical variables should have, 'object' by default\n","            i.e., if a variable has this data type, it should be a categorical variable\n","    \n","    Returns\n","    ----------\n","    The dataframe of categorical variables and their number of unique value\n","    \"\"\"\n","    \n","    # Get the dataframe of categorical variables and their number of unique value\n","    df_cat = pd.DataFrame([[var, df[var].nunique(dropna=False)]\n","                           # If the data type is dtype\n","                           for var in df.columns if df[var].dtype == dtype],\n","                          columns=['var', 'nunique'])\n","    \n","    # Sort df_cat in accending order of the number of unique value\n","    df_cat = df_cat.sort_values(by='nunique', ascending=False).reset_index(drop=True)\n","    \n","    return df_cat"],"metadata":{"id":"qWuAu5wZQP8U"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Call cat_var_checker on df\n","# See the implementation in pmlm_utilities.ipynb\n","df_cat = cat_var_checker(df)\n","\n","# Print the dataframe\n","df_cat"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"MQLCt9LxQmUI","executionInfo":{"status":"ok","timestamp":1650848859735,"user_tz":240,"elapsed":294,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"8c52300a-f39a-4202-d510-63b2158cfa76"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               var  nunique\n","0  disc_instrument       88\n","1   disc_telescope       75\n","2    disc_facility       64\n","3  discoverymethod       11\n","4          soltype        9\n","5      disc_locale        4"],"text/html":["\n","  <div id=\"df-ef4b296a-aacd-401d-8a8d-a79e6da91edd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>var</th>\n","      <th>nunique</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>disc_instrument</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>disc_telescope</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>disc_facility</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>discoverymethod</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>soltype</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>disc_locale</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef4b296a-aacd-401d-8a8d-a79e6da91edd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ef4b296a-aacd-401d-8a8d-a79e6da91edd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ef4b296a-aacd-401d-8a8d-a79e6da91edd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["# One-hot-encode the categorical features in the combined data\n","df = pd.get_dummies(df, columns=np.setdiff1d(df_cat['var'], [target]))\n","\n","# Print the first 5 rows of df\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":508},"id":"oaqAo22RQtd4","executionInfo":{"status":"ok","timestamp":1650848892889,"user_tz":240,"elapsed":315,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"661cdf72-4b2c-40d7-8c3e-53c3255427b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   default_flag  sy_snum  sy_pnum  pl_controv_flag  disc_year  \\\n","0             0        1        1                0       2016   \n","1             0        1        1                0       2016   \n","2             0        1        3                0       2016   \n","3             0        1        6                0       2010   \n","4             0        1        1                0       2016   \n","\n","                                 soltype  pl_orbper  pl_orbsmax  pl_rade  \\\n","0   Kepler Project Candidate (q1_q8_koi)   5.082709      0.0580    1.600   \n","1  Kepler Project Candidate (q1_q16_koi)  20.925392      0.1499    1.380   \n","2                    Published Confirmed   9.997457      0.0440    2.800   \n","3                    Published Confirmed   4.437963      0.0440    3.024   \n","4   Kepler Project Candidate (q1_q8_koi)  96.914920      0.3890    2.300   \n","\n","   pl_radj  ...  discoverymethod_Disk Kinematics  \\\n","0    0.136  ...                                0   \n","1    0.136  ...                                0   \n","2    0.136  ...                                0   \n","3    0.270  ...                                0   \n","4    0.136  ...                                0   \n","\n","   discoverymethod_Eclipse Timing Variations  discoverymethod_Imaging  \\\n","0                                          0                        0   \n","1                                          0                        0   \n","2                                          0                        0   \n","3                                          0                        0   \n","4                                          0                        0   \n","\n","   discoverymethod_Microlensing  \\\n","0                             0   \n","1                             0   \n","2                             0   \n","3                             0   \n","4                             0   \n","\n","   discoverymethod_Orbital Brightness Modulation  \\\n","0                                              0   \n","1                                              0   \n","2                                              0   \n","3                                              0   \n","4                                              0   \n","\n","   discoverymethod_Pulsar Timing  discoverymethod_Pulsation Timing Variations  \\\n","0                              0                                            0   \n","1                              0                                            0   \n","2                              0                                            0   \n","3                              0                                            0   \n","4                              0                                            0   \n","\n","   discoverymethod_Radial Velocity  discoverymethod_Transit  \\\n","0                                0                        1   \n","1                                0                        1   \n","2                                0                        1   \n","3                                0                        1   \n","4                                0                        1   \n","\n","   discoverymethod_Transit Timing Variations  \n","0                                          0  \n","1                                          0  \n","2                                          0  \n","3                                          0  \n","4                                          0  \n","\n","[5 rows x 274 columns]"],"text/html":["\n","  <div id=\"df-5a740ab1-3ef3-4b2b-8cab-8f9af161ef40\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>default_flag</th>\n","      <th>sy_snum</th>\n","      <th>sy_pnum</th>\n","      <th>pl_controv_flag</th>\n","      <th>disc_year</th>\n","      <th>soltype</th>\n","      <th>pl_orbper</th>\n","      <th>pl_orbsmax</th>\n","      <th>pl_rade</th>\n","      <th>pl_radj</th>\n","      <th>...</th>\n","      <th>discoverymethod_Disk Kinematics</th>\n","      <th>discoverymethod_Eclipse Timing Variations</th>\n","      <th>discoverymethod_Imaging</th>\n","      <th>discoverymethod_Microlensing</th>\n","      <th>discoverymethod_Orbital Brightness Modulation</th>\n","      <th>discoverymethod_Pulsar Timing</th>\n","      <th>discoverymethod_Pulsation Timing Variations</th>\n","      <th>discoverymethod_Radial Velocity</th>\n","      <th>discoverymethod_Transit</th>\n","      <th>discoverymethod_Transit Timing Variations</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2016</td>\n","      <td>Kepler Project Candidate (q1_q8_koi)</td>\n","      <td>5.082709</td>\n","      <td>0.0580</td>\n","      <td>1.600</td>\n","      <td>0.136</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2016</td>\n","      <td>Kepler Project Candidate (q1_q16_koi)</td>\n","      <td>20.925392</td>\n","      <td>0.1499</td>\n","      <td>1.380</td>\n","      <td>0.136</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2016</td>\n","      <td>Published Confirmed</td>\n","      <td>9.997457</td>\n","      <td>0.0440</td>\n","      <td>2.800</td>\n","      <td>0.136</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>2010</td>\n","      <td>Published Confirmed</td>\n","      <td>4.437963</td>\n","      <td>0.0440</td>\n","      <td>3.024</td>\n","      <td>0.270</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2016</td>\n","      <td>Kepler Project Candidate (q1_q8_koi)</td>\n","      <td>96.914920</td>\n","      <td>0.3890</td>\n","      <td>2.300</td>\n","      <td>0.136</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 274 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a740ab1-3ef3-4b2b-8cab-8f9af161ef40')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5a740ab1-3ef3-4b2b-8cab-8f9af161ef40 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5a740ab1-3ef3-4b2b-8cab-8f9af161ef40');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["df['soltype'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-ZHa7L3CRO9T","executionInfo":{"status":"ok","timestamp":1650849027303,"user_tz":240,"elapsed":620,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"c1d87dee-fdf3-4390-ec15-bc2bab4c1c7f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Kepler Project Candidate (q1_q8_koi)',\n","       'Kepler Project Candidate (q1_q16_koi)', 'Published Confirmed',\n","       'Kepler Project Candidate (q1_q17_dr25_koi)',\n","       'Published Candidate', 'Kepler Project Candidate (q1_q12_koi)',\n","       'Kepler Project Candidate (q1_q17_dr24_koi)',\n","       'Kepler Project Candidate (q1_q17_dr25_sup_koi)',\n","       'TESS Project Candidate'], dtype=object)"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["df['soltype'] = df['soltype'].apply(lambda x: 1 if x == 'Published Confirmed' else 0)\n"],"metadata":{"id":"Y258WGP6Q1G9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","\n","# The LabelEncoder\n","le = LabelEncoder()\n","\n","# Encode categorical target in the combined data\n","df[target] = le.fit_transform(df[target])\n","\n","# Print the first 5 rows of df\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"id":"HNvvyuxwTdWZ","executionInfo":{"status":"ok","timestamp":1650850004174,"user_tz":240,"elapsed":486,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"83f7f5fb-9a9d-46a9-f352-82c54a81b2fb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   default_flag  sy_snum  sy_pnum  pl_controv_flag  disc_year  soltype  \\\n","0             0        1        1                0       2016        0   \n","1             0        1        1                0       2016        0   \n","2             0        1        3                0       2016        1   \n","3             0        1        6                0       2010        1   \n","4             0        1        1                0       2016        0   \n","\n","   pl_orbper  pl_orbsmax  pl_rade  pl_radj  ...  \\\n","0   5.082709      0.0580    1.600    0.136  ...   \n","1  20.925392      0.1499    1.380    0.136  ...   \n","2   9.997457      0.0440    2.800    0.136  ...   \n","3   4.437963      0.0440    3.024    0.270  ...   \n","4  96.914920      0.3890    2.300    0.136  ...   \n","\n","   discoverymethod_Disk Kinematics  discoverymethod_Eclipse Timing Variations  \\\n","0                                0                                          0   \n","1                                0                                          0   \n","2                                0                                          0   \n","3                                0                                          0   \n","4                                0                                          0   \n","\n","   discoverymethod_Imaging  discoverymethod_Microlensing  \\\n","0                        0                             0   \n","1                        0                             0   \n","2                        0                             0   \n","3                        0                             0   \n","4                        0                             0   \n","\n","   discoverymethod_Orbital Brightness Modulation  \\\n","0                                              0   \n","1                                              0   \n","2                                              0   \n","3                                              0   \n","4                                              0   \n","\n","   discoverymethod_Pulsar Timing  discoverymethod_Pulsation Timing Variations  \\\n","0                              0                                            0   \n","1                              0                                            0   \n","2                              0                                            0   \n","3                              0                                            0   \n","4                              0                                            0   \n","\n","   discoverymethod_Radial Velocity  discoverymethod_Transit  \\\n","0                                0                        1   \n","1                                0                        1   \n","2                                0                        1   \n","3                                0                        1   \n","4                                0                        1   \n","\n","   discoverymethod_Transit Timing Variations  \n","0                                          0  \n","1                                          0  \n","2                                          0  \n","3                                          0  \n","4                                          0  \n","\n","[5 rows x 274 columns]"],"text/html":["\n","  <div id=\"df-852ed007-94df-4358-b460-ada951f339cc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>default_flag</th>\n","      <th>sy_snum</th>\n","      <th>sy_pnum</th>\n","      <th>pl_controv_flag</th>\n","      <th>disc_year</th>\n","      <th>soltype</th>\n","      <th>pl_orbper</th>\n","      <th>pl_orbsmax</th>\n","      <th>pl_rade</th>\n","      <th>pl_radj</th>\n","      <th>...</th>\n","      <th>discoverymethod_Disk Kinematics</th>\n","      <th>discoverymethod_Eclipse Timing Variations</th>\n","      <th>discoverymethod_Imaging</th>\n","      <th>discoverymethod_Microlensing</th>\n","      <th>discoverymethod_Orbital Brightness Modulation</th>\n","      <th>discoverymethod_Pulsar Timing</th>\n","      <th>discoverymethod_Pulsation Timing Variations</th>\n","      <th>discoverymethod_Radial Velocity</th>\n","      <th>discoverymethod_Transit</th>\n","      <th>discoverymethod_Transit Timing Variations</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2016</td>\n","      <td>0</td>\n","      <td>5.082709</td>\n","      <td>0.0580</td>\n","      <td>1.600</td>\n","      <td>0.136</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2016</td>\n","      <td>0</td>\n","      <td>20.925392</td>\n","      <td>0.1499</td>\n","      <td>1.380</td>\n","      <td>0.136</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>9.997457</td>\n","      <td>0.0440</td>\n","      <td>2.800</td>\n","      <td>0.136</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>2010</td>\n","      <td>1</td>\n","      <td>4.437963</td>\n","      <td>0.0440</td>\n","      <td>3.024</td>\n","      <td>0.270</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2016</td>\n","      <td>0</td>\n","      <td>96.914920</td>\n","      <td>0.3890</td>\n","      <td>2.300</td>\n","      <td>0.136</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 274 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-852ed007-94df-4358-b460-ada951f339cc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-852ed007-94df-4358-b460-ada951f339cc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-852ed007-94df-4358-b460-ada951f339cc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["# Separating the training data\n","df_train = df.iloc[:df_train.shape[0], :]\n","\n","# Separating the validation data\n","df_val = df.iloc[df_train.shape[0]:df_train.shape[0] + df_val.shape[0], :]\n","\n","# Separating the test data\n","df_test = df.iloc[df_train.shape[0] + df_val.shape[0]:, :]"],"metadata":{"id":"3H0v0A0NVCEC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Print the dimension of df_train\n","pd.DataFrame([[df_train.shape[0], df_train.shape[1]]], columns=['# rows', '# columns'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"uDJ-BUmDVe71","executionInfo":{"status":"ok","timestamp":1650850134769,"user_tz":240,"elapsed":319,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"0ec2bae3-f8a9-4955-f58c-b8fdacf1ca92"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   # rows  # columns\n","0   19397        274"],"text/html":["\n","  <div id=\"df-7592d30d-f879-41db-b643-aae7793dbb16\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th># rows</th>\n","      <th># columns</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19397</td>\n","      <td>274</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7592d30d-f879-41db-b643-aae7793dbb16')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7592d30d-f879-41db-b643-aae7793dbb16 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7592d30d-f879-41db-b643-aae7793dbb16');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["# Print the dimension of df_val\n","pd.DataFrame([[df_val.shape[0], df_val.shape[1]]], columns=['# rows', '# columns'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"t4pOh5e4VhfE","executionInfo":{"status":"ok","timestamp":1650850145061,"user_tz":240,"elapsed":283,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"8f903b14-aff8-4cb9-b86e-3763d2a90101"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   # rows  # columns\n","0    6466        274"],"text/html":["\n","  <div id=\"df-d995d222-46e7-43ed-adb6-ca7127f5f150\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th># rows</th>\n","      <th># columns</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6466</td>\n","      <td>274</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d995d222-46e7-43ed-adb6-ca7127f5f150')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d995d222-46e7-43ed-adb6-ca7127f5f150 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d995d222-46e7-43ed-adb6-ca7127f5f150');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["# Print the dimension of df_test\n","pd.DataFrame([[df_test.shape[0], df_test.shape[1]]], columns=['# rows', '# columns'])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"0oG92sd8VjQp","executionInfo":{"status":"ok","timestamp":1650850159923,"user_tz":240,"elapsed":588,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"dcceee18-02ae-4650-fb67-85ee7e94514e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   # rows  # columns\n","0    6466        274"],"text/html":["\n","  <div id=\"df-98257923-1dec-4bce-8011-00b83639258d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th># rows</th>\n","      <th># columns</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6466</td>\n","      <td>274</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98257923-1dec-4bce-8011-00b83639258d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-98257923-1dec-4bce-8011-00b83639258d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-98257923-1dec-4bce-8011-00b83639258d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":63}]},{"cell_type":"markdown","source":["## Splitting the Feature and Target"],"metadata":{"id":"OKuC4l0BVn19"}},{"cell_type":"code","source":["# Get the feature matrix\n","X_train = df_train[np.setdiff1d(df_train.columns, [target])].values\n","X_val = df_val[np.setdiff1d(df_val.columns, [target])].values\n","X_test = df_test[np.setdiff1d(df_test.columns, [target])].values\n","\n","# Get the target vector\n","y_train = df_train[target].values\n","y_val = df_val[target].values\n","y_test = df_test[target].values"],"metadata":{"id":"xpjiyOUBVsJh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Scaling the Data"],"metadata":{"id":"gKTaRN7SVxBY"}},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","\n","# The StandardScaler\n","ss = StandardScaler()"],"metadata":{"id":"vpHYTwhsVvoR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Standardize the training data\n","X_train = ss.fit_transform(X_train)\n","\n","# Standardize the validation data\n","X_val = ss.transform(X_val)\n","\n","# Standardize the test data\n","X_test = ss.transform(X_test)"],"metadata":{"id":"8KvHjNkJWDmJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## No Class Imbalance"],"metadata":{"id":"Xbq_aG3RWLEU"}},{"cell_type":"code","source":["pd.Series(y_train).value_counts()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NU3TqpX4WGDZ","executionInfo":{"status":"ok","timestamp":1650850305323,"user_tz":240,"elapsed":488,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"ea9fe5c1-e43b-4c48-c87c-be335d75a307"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    9881\n","1    9516\n","dtype: int64"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["pd.Series(y_test).value_counts()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HCbnKouGWN_R","executionInfo":{"status":"ok","timestamp":1650850362827,"user_tz":240,"elapsed":348,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"cd3c3d50-6e36-4849-a107-e21e6ab2c7b1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    3294\n","1    3172\n","dtype: int64"]},"metadata":{},"execution_count":69}]},{"cell_type":"markdown","source":["## Hyperparameter Tuning"],"metadata":{"id":"Yt1G0HlUWZIi"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier\n","\n","\n","models = {'lr': LogisticRegression(class_weight='balanced', random_state=random_seed),\n","          'rfc': RandomForestClassifier(class_weight='balanced', random_state=random_seed)}"],"metadata":{"id":"R871FmgiWcRZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.pipeline import Pipeline\n","\n","pipes = {}\n","\n","for acronym, model in models.items():\n","    pipes[acronym] = Pipeline([('model', model)])"],"metadata":{"id":"wuRBUpzNXHUx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import PredefinedSplit\n","\n","def get_train_val_ps(X_train, y_train, X_val, y_val):\n","    \"\"\"\n","    Get the:\n","    feature matrix and target velctor in the combined training and validation data\n","    target vector in the combined training and validation data\n","    PredefinedSplit\n","    \n","    Parameters\n","    ----------\n","    X_train : the feature matrix in the training data\n","    y_train : the target vector in the training data\n","    X_val : the feature matrix in the validation data\n","    y_val : the target vector in the validation data  \n","\n","    Return\n","    ----------\n","    The feature matrix in the combined training and validation data\n","    The target vector in the combined training and validation data\n","    PredefinedSplit\n","    \"\"\"  \n","\n","    # Combine the feature matrix in the training and validation data\n","    X_train_val = np.vstack((X_train, X_val))\n","\n","    # Combine the target vector in the training and validation data\n","    y_train_val = np.vstack((y_train.reshape(-1, 1), y_val.reshape(-1, 1))).reshape(-1)\n","\n","    # Get the indices of training and validation data\n","    train_val_idxs = np.append(np.full(X_train.shape[0], -1), np.full(X_val.shape[0], 0))\n","\n","    # The PredefinedSplit\n","    ps = PredefinedSplit(train_val_idxs)\n","\n","    return X_train_val, y_train_val, ps"],"metadata":{"id":"2bGi07LJXWyF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Get the:\n","  # feature matrix and target velctor in the combined training and validation data\n","  # target vector in the combined training and validation data\n","# PredefinedSplit\n","See the implementation in pmlm_utilities.ipynb\n","X_train_val, y_train_val, ps = get_train_val_ps(X_train, y_train, X_val, y_val)"],"metadata":{"id":"SFfFz4rsXbHK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### GridSearch"],"metadata":{"id":"6scHM9peXdXG"}},{"cell_type":"code","source":["param_grids = {}\n"],"metadata":{"id":"uUusxSXzYaM9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#The parameter grid for random forest\n","#The hyperparameters we want to fine-tune are:\n","\n","#min_samples_split\n","#min_samples_leaf\n","#See details of the meaning of the hyperparametes in sklearn.ensemble.RandomForestClassifier\n","\n","# The grids for min_samples_split\n","min_samples_split_grids = [2, 20, 100, 200]\n","\n","# The grids for min_samples_leaf\n","min_samples_leaf_grids = [1, 20, 100]\n","\n","# Update param_grids\n","param_grids['rfc'] = [{'model__min_samples_split': min_samples_split_grids,\n","                       'model__min_samples_leaf': min_samples_leaf_grids}]"],"metadata":{"id":"2XEm9HjXXAVc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#The parameter grid for LogisticRegression\n","#The hyperparameters we want to fine-tune are:\n","#tol\n","#C\n","#See details of the meaning of the hyperparametes in sklearn.linear_model.LogisticRegression\n","# The parameter grid of tol\n","# The parameter grid of tol\n","tol_grid = [10 ** -5, 10 ** -4, 10 ** -8] # more ranges + play with powers\n","\n","# The parameter grid of C\n","C_grid = [10 ** -5, 10 ** -4, 10 ** -3]\n","# [.0001, .001, .01, .1, 1.0, 10.0, 100.00, 1000.0, 10000.0]\n","\n","# Update param_grids\n","param_grids['lr'] = [{'model__tol': tol_grid,\n","                      'model__C': C_grid}]"],"metadata":{"id":"Ffve3E3aYXBs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Make directory\n","import os\n","directory = os.path.dirname('/content/drive/My Drive/Colab Notebooks/result/cv_results/GridSearchCV3/result/Project/')\n","if not os.path.exists(directory):\n","    os.makedirs(directory)"],"metadata":{"id":"6nbfMAa4Ygj4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Tuning Hyperperarameters"],"metadata":{"id":"MKK3Cmt7Yt8W"}},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","\n","# The list of [best_score_, best_params_, best_estimator_] obtained by GridSearchCV\n","best_score_params_estimator_gs = []\n","\n","# For each model\n","for acronym in pipes.keys():\n","    # GridSearchCV\n","    gs = GridSearchCV(estimator=pipes[acronym],\n","                      param_grid=param_grids[acronym],\n","                      scoring='f1_macro',\n","                      n_jobs=2,\n","                      cv=ps,\n","                      return_train_score=True)\n","        \n","    # Fit the pipeline\n","    gs = gs.fit(X_train_val, y_train_val)\n","    \n","    # Update best_score_params_estimator_gs\n","    best_score_params_estimator_gs.append([gs.best_score_, gs.best_params_, gs.best_estimator_])\n","    \n","    # Sort cv_results in ascending order of 'rank_test_score' and 'std_test_score'\n","    cv_results = pd.DataFrame.from_dict(gs.cv_results_).sort_values(by=['rank_test_score', 'std_test_score'])\n","    \n","    # Get the important columns in cv_results\n","    important_columns = ['rank_test_score',\n","                         'mean_test_score', \n","                         'std_test_score', \n","                         'mean_train_score', \n","                         'std_train_score',\n","                         'mean_fit_time', \n","                         'std_fit_time',                        \n","                         'mean_score_time', \n","                         'std_score_time']\n","    \n","    # Move the important columns ahead\n","    cv_results = cv_results[important_columns + sorted(list(set(cv_results.columns) - set(important_columns)))]\n","\n","    # Write cv_results file\n","    cv_results.to_csv(path_or_buf='/content/drive/My Drive/Colab Notebooks/result/cv_results/GridSearchCV3/result/submission/' + acronym + '.csv', index=False)\n","\n","# Sort best_score_params_estimator_gs in descending order of the best_score_\n","best_score_params_estimator_gs = sorted(best_score_params_estimator_gs, key=lambda x : x[0], reverse=True)\n","\n","# Print best_score_params_estimator_gs\n","pd.DataFrame(best_score_params_estimator_gs, columns=['best_score', 'best_param', 'best_estimator'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"t6hv7tz-YtN8","executionInfo":{"status":"ok","timestamp":1650851095247,"user_tz":240,"elapsed":37572,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"55e2280c-06a8-41a8-a8a0-ed1b11fff150"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   best_score                                         best_param  \\\n","0    0.913253  {'model__min_samples_leaf': 1, 'model__min_sam...   \n","1    0.785373           {'model__C': 0.001, 'model__tol': 1e-05}   \n","\n","                                      best_estimator  \n","0  ((DecisionTreeClassifier(max_features='auto', ...  \n","1  (LogisticRegression(C=0.001, class_weight='bal...  "],"text/html":["\n","  <div id=\"df-70b4bb1c-3bc1-4080-b1b4-e2fc44482609\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>best_score</th>\n","      <th>best_param</th>\n","      <th>best_estimator</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.913253</td>\n","      <td>{'model__min_samples_leaf': 1, 'model__min_sam...</td>\n","      <td>((DecisionTreeClassifier(max_features='auto', ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.785373</td>\n","      <td>{'model__C': 0.001, 'model__tol': 1e-05}</td>\n","      <td>(LogisticRegression(C=0.001, class_weight='bal...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-70b4bb1c-3bc1-4080-b1b4-e2fc44482609')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-70b4bb1c-3bc1-4080-b1b4-e2fc44482609 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-70b4bb1c-3bc1-4080-b1b4-e2fc44482609');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":79}]},{"cell_type":"markdown","source":["### Model Selection"],"metadata":{"id":"rr7SLFxPZngO"}},{"cell_type":"code","source":["# Get the best_score, best_params and best_estimator obtained by GridSearchCV\n","best_score_gs, best_params_gs, best_estimator_gs = best_score_params_estimator_gs[0]"],"metadata":{"id":"BMfR1Y43Zizk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Generating Submission File"],"metadata":{"id":"Lr8R4vF8ahrn"}},{"cell_type":"code","source":["# Make directory\n","directory = os.path.dirname('/content/drive/My Drive/Colab Notebooks/result/cv_results/GridSearchCV3/result/Project/')\n","if not os.path.exists(directory):\n","    os.makedirs(directory)"],"metadata":{"id":"07FTgC-Iakco"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import precision_recall_fscore_support\n","from sklearn.metrics import roc_auc_score\n","\n","# Get the prediction on the testing data using best_model\n","y_test_pred = best_estimator_gs.predict(X_test)\n","\n","# Get the precision, recall, fscore, support\n","precision, recall, fscore, support = precision_recall_fscore_support(y_test, y_test_pred)\n","\n","# Get the auc\n","auc = roc_auc_score(y_test, y_test_pred)\n","\n","# Get the dataframe of precision, recall, fscore and auc\n","pd.DataFrame([[precision, recall, fscore, auc]], columns=['Precision', 'Recall', 'F1-score', 'AUC'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":142},"id":"Vy0n3mwDWP3h","executionInfo":{"status":"ok","timestamp":1650867140451,"user_tz":240,"elapsed":368,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"cee43ae8-30d2-49cc-a14b-50634f94af10"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                  Precision  \\\n","0  [0.9850852272727273, 0.8575342465753425]   \n","\n","                                     Recall  \\\n","0  [0.8421372191863995, 0.9867591424968474]   \n","\n","                                   F1-score       AUC  \n","0  [0.9080196399345335, 0.9176194664321312]  0.914448  "],"text/html":["\n","  <div id=\"df-d053cbcd-5446-4551-b2fd-8a7d24e67b5e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","      <th>F1-score</th>\n","      <th>AUC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>[0.9850852272727273, 0.8575342465753425]</td>\n","      <td>[0.8421372191863995, 0.9867591424968474]</td>\n","      <td>[0.9080196399345335, 0.9176194664321312]</td>\n","      <td>0.914448</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d053cbcd-5446-4551-b2fd-8a7d24e67b5e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d053cbcd-5446-4551-b2fd-8a7d24e67b5e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d053cbcd-5446-4551-b2fd-8a7d24e67b5e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":88}]},{"cell_type":"markdown","source":["The Random forest was found to be the better model of the two with a accuract of 91% and 78% respectively. "],"metadata":{"id":"BAj9kyZyXxH7"}},{"cell_type":"markdown","source":["### Feature Importance"],"metadata":{"id":"HtHue44raNLN"}},{"cell_type":"code","source":["# Get the best_score, best_param and best_estimator of random forest obtained by GridSearchCV\n","best_score_rfc, best_param_rfc, best_estimator_rfc = best_score_params_estimator_gs[0]\n","\n","# Get the dataframe of feature and importance\n","df_fi_rfc = pd.DataFrame(np.hstack((np.setdiff1d(df_train.columns, [target]).reshape(-1, 1), best_estimator_rfc.named_steps['model'].feature_importances_.reshape(-1, 1))),\n","                         columns=['Features', 'Importance'])\n","\n","# Sort df_fi_rfc in descending order of the importance\n","df_fi_rfc = df_fi_rfc.sort_values(ascending=False, by='Importance').reset_index(drop=True)\n","\n","# Print the first 5 rows of df_fi_rfc\n","df_fi_rfc.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"nU1w7wNlZrw8","executionInfo":{"status":"ok","timestamp":1650851626355,"user_tz":240,"elapsed":299,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"2ec86fdc-cf1b-41d5-999a-7724ddd198b1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Features Importance\n","0      pl_eqt   0.138401\n","1     pl_radj   0.115849\n","2  pl_orbsmax    0.10236\n","3  pl_orbincl    0.07891\n","4    pl_insol   0.076557"],"text/html":["\n","  <div id=\"df-92b14b3e-54fc-4c42-bc76-fec588188af4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Features</th>\n","      <th>Importance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>pl_eqt</td>\n","      <td>0.138401</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>pl_radj</td>\n","      <td>0.115849</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>pl_orbsmax</td>\n","      <td>0.10236</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>pl_orbincl</td>\n","      <td>0.07891</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>pl_insol</td>\n","      <td>0.076557</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92b14b3e-54fc-4c42-bc76-fec588188af4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-92b14b3e-54fc-4c42-bc76-fec588188af4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-92b14b3e-54fc-4c42-bc76-fec588188af4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Create a figure\n","fig = plt.figure(figsize=(10, 5))\n","\n","# The bar plot of the top 5 feature importance\n","plt.bar(df_fi_rfc['Features'][:5], df_fi_rfc['Importance'][:5], color='green')\n","\n","# Set x-axis\n","plt.xlabel('Features')\n","plt.xticks(rotation=90)\n","\n","# Set y-axis\n","plt.ylabel('Importance')\n","\n","# Save and show the figure\n","plt.tight_layout()\n","plt.savefig('/content/drive/My Drive/Colab Notebooks/result/cv_results/GridSearchCV3/result/submission/feature_importance_rfc.pdf')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":348},"id":"8ceKliCxbTQp","executionInfo":{"status":"ok","timestamp":1650851661168,"user_tz":240,"elapsed":1464,"user":{"displayName":"Chiemeziem Oguayo","userId":"07473812207736039697"}},"outputId":"f40df431-78df-4078-cdaf-bf8f2941858a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Conclusion"],"metadata":{"id":"wZ2uR9qW3d3a"}},{"cell_type":"markdown","source":["The models were successfully built, that were able to predict whether an object of interest would be classified as a candidate or confirmed planet. The random forest model was the better performing better model with an accuracy of 91% and the logistic regression having an accuracy of 78%. So with an accuracy of 91%, the Random forest can be applied to a new dataset, and be expected to perform well. The most important features underwere determined to be pl_eqt(Temperature), pl_radj(planet radius), pl_orbsmax(Orbit Semi-Major Axis), pl_orbincl(planet inclindation), pl_insol(Temperature), meaning that these variables were most impactul the the performance of the model. Also when evaluating the model, we determine the AUC of the best model, to have a value of 0.91. The closer the value is to 1 the better performing we can say our model to be. This value indicates how well our model can differentiate between classes."],"metadata":{"id":"ply3JIQoQY8z"}},{"cell_type":"markdown","source":["# References & Data Source"],"metadata":{"id":"hezPQXC4QUQq"}},{"cell_type":"markdown","source":["https://www.nasa.gov/mission_pages/kepler/overview/index.html"],"metadata":{"id":"fpFnWOWKTFoL"}},{"cell_type":"markdown","source":["Code was adopted from: \n","https://github.com/yuxiaohuang/teaching/blob/master/gwu/machine_learning_I/spring_2022/code/p2_shallow_learning/p2_c2_supervised_learning/p2_c2_s3_logistic_regression/case_study/case_study_bcw.ipynb"],"metadata":{"id":"xW--ZpVMSVfF"}},{"cell_type":"markdown","source":["Data source:\n","https://exoplanetarchive.ipac.caltech.edu/cgi-bin/TblView/nph-tblView?app=ExoTbls&config=PS"],"metadata":{"id":"nitc7WhASxOb"}},{"cell_type":"markdown","source":["Data set description: https://exoplanetarchive.ipac.caltech.edu/docs/API_PS_columns.html"],"metadata":{"id":"G4xCBp9WS6SV"}}]}